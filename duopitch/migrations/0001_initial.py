# Generated by Django 5.2.1 on 2025-06-01 20:31

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='WindLoadCalculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vb0', models.FloatField(default=22.0, help_text='The 10-minute mean wind speed at 10 m above ground (m/s)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Fundamental Basic Wind Velocity (V_b0)')),
                ('c_direction', models.FloatField(default=1.0, help_text='Factor accounting for wind direction effects', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Directional Factor (C_direction)')),
                ('c_season', models.FloatField(default=1.0, help_text='Factor accounting for seasonal wind variations', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Seasonal Factor (C_season)')),
                ('rho', models.FloatField(default=1.25, help_text='Density of air at the site (kg/m³)', validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(1.5)], verbose_name='Air Density (ρ)')),
                ('terrain_category', models.CharField(choices=[('0', '0 - Sea or coastal area'), ('I', 'I - Low vegetation'), ('II', 'II - Regular vegetation'), ('III', 'III - Suburban'), ('IV', 'IV - Urban')], default='II', help_text="Describes the surrounding environment's roughness", max_length=3, verbose_name='Terrain Category')),
                ('ridge_height', models.FloatField(default=6.1, help_text="Height from ground to the roof's ridge (m)", validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Ridge Height (h)')),
                ('building_length', models.FloatField(default=30.0, help_text='Length of the building parallel to the ridge (m)', validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Building Length (L)')),
                ('building_width', models.FloatField(default=12.0, help_text='Width of the building perpendicular to the ridge (m)', validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Building Width (b)')),
                ('pitch_angle', models.FloatField(default=15.0, help_text='Angle of the roof slope relative to horizontal (degrees)', validators=[django.core.validators.MinValueValidator(-75.0), django.core.validators.MaxValueValidator(75.0)], verbose_name='Pitch Angle (α)')),
                ('site_altitude', models.FloatField(default=1650.0, help_text='Elevation of the site above sea level (m)', validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Site Altitude')),
                ('upwind_slope', models.FloatField(default=0.06, help_text='Slope of the terrain upwind of the building', validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Upwind Slope (φ)')),
                ('horizontal_distance', models.FloatField(default=-200.0, help_text='Distance from building to crest of upwind terrain (m)', validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Horizontal Distance from Crest')),
                ('effective_height', models.FloatField(default=30.0, help_text='Height of upwind terrain crest relative to site (m)', validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Effective Height of Crest')),
                ('upwind_slope_length', models.FloatField(default=500.0, help_text='Length of the upwind terrain slope (m)', validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Upwind Slope Length')),
                ('windward_openings_area', models.FloatField(default=41.25, help_text='Total area of openings on windward face (m²)', validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Windward Openings Area')),
                ('leeward_openings_area', models.FloatField(default=41.25, help_text='Total area of openings on leeward face (m²)', validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Leeward Openings Area')),
                ('parallel_openings_area', models.FloatField(default=37.0, help_text='Total area of openings on parallel faces (m²)', validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Parallel Openings Area')),
                ('structural_factor', models.FloatField(default=1.0, help_text="Factor accounting for building's dynamic response", validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Structural Factor (c_s c_d)')),
                ('purlin_spacing', models.FloatField(default=1.5525, help_text='Distance between purlins supporting the roof (m)', validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Purlin Spacing')),
                ('truss_spacing', models.FloatField(default=3.0, help_text='Distance between trusses supporting the roof (m)', validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Truss Spacing')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('calculation_name', models.CharField(blank=True, help_text='Optional name for this calculation', max_length=100)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this calculation')),
            ],
            options={
                'verbose_name': 'Wind Load Calculation',
                'verbose_name_plural': 'Wind Load Calculations',
                'ordering': ['-created_at'],
            },
        ),
    ]
