# Generated by Django 5.2.1 on 2025-06-01 19:17

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Wind_load_analysis_on_hipped_roof', '0002_windloadcalculation_delete_windloadinput'),
    ]

    operations = [
        migrations.AddField(
            model_name='windloadcalculation',
            name='cr',
            field=models.FloatField(blank=True, help_text='Calculated roughness factor', null=True, verbose_name='Roughness Factor'),
        ),
        migrations.AddField(
            model_name='windloadcalculation',
            name='qb',
            field=models.FloatField(blank=True, help_text='Calculated basic velocity pressure (N/m²)', null=True, verbose_name='Basic Velocity Pressure'),
        ),
        migrations.AddField(
            model_name='windloadcalculation',
            name='qp',
            field=models.FloatField(blank=True, help_text='Calculated peak velocity pressure (N/m²)', null=True, verbose_name='Peak Velocity Pressure'),
        ),
        migrations.AddField(
            model_name='windloadcalculation',
            name='vb',
            field=models.FloatField(blank=True, help_text='Calculated basic wind velocity (m/s)', null=True, verbose_name='Basic Wind Velocity'),
        ),
        migrations.AddField(
            model_name='windloadcalculation',
            name='vm',
            field=models.FloatField(blank=True, help_text='Calculated mean wind velocity (m/s)', null=True, verbose_name='Mean Wind Velocity'),
        ),
        migrations.AlterField(
            model_name='windloadcalculation',
            name='c_direction',
            field=models.FloatField(default=1.0, help_text='Factor accounting for wind direction effects', validators=[django.core.validators.MinValueValidator(0, message='Directional factor cannot be negative'), django.core.validators.MaxValueValidator(1, message='Directional factor cannot exceed 1')], verbose_name='Directional Factor'),
        ),
        migrations.AlterField(
            model_name='windloadcalculation',
            name='c_season',
            field=models.FloatField(default=1.0, help_text='Factor accounting for seasonal wind variations', validators=[django.core.validators.MinValueValidator(0, message='Seasonal factor cannot be negative'), django.core.validators.MaxValueValidator(1, message='Seasonal factor cannot exceed 1')], verbose_name='Seasonal Factor'),
        ),
        migrations.AlterField(
            model_name='windloadcalculation',
            name='calculation_name',
            field=models.CharField(help_text='A descriptive name for this calculation', max_length=100),
        ),
        migrations.AlterField(
            model_name='windloadcalculation',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='windloadcalculation',
            name='h_e',
            field=models.FloatField(help_text='Height from ground to the eaves of the roof (m)', validators=[django.core.validators.MinValueValidator(0, message='Height to eaves cannot be negative'), django.core.validators.MaxValueValidator(200, message='Height to eaves cannot exceed 200m')], verbose_name='Height to Eaves'),
        ),
        migrations.AlterField(
            model_name='windloadcalculation',
            name='h_r',
            field=models.FloatField(help_text='Height from the eaves to the roof ridge (m)', validators=[django.core.validators.MinValueValidator(0, message='Height to ridge cannot be negative'), django.core.validators.MaxValueValidator(200, message='Height to ridge cannot exceed 200m')], verbose_name='Height to Ridge'),
        ),
        migrations.AlterField(
            model_name='windloadcalculation',
            name='notes',
            field=models.TextField(blank=True, help_text='Additional information about this calculation'),
        ),
        migrations.AlterField(
            model_name='windloadcalculation',
            name='rho',
            field=models.FloatField(default=1.25, help_text='Density of air at the site (kg/m³)', validators=[django.core.validators.MinValueValidator(1.0, message='Air density cannot be less than 1.0 kg/m³'), django.core.validators.MaxValueValidator(1.5, message='Air density cannot exceed 1.5 kg/m³')], verbose_name='Air Density'),
        ),
        migrations.AlterField(
            model_name='windloadcalculation',
            name='terrain_category',
            field=models.CharField(choices=[('0', 'Sea or coastal area'), ('I', 'Lake or flat and horizontal area with negligible vegetation'), ('II', 'Area with low vegetation and isolated obstacles'), ('III', 'Area with regular cover of vegetation or buildings'), ('IV', 'Area in which at least 15% of the surface is covered with buildings')], help_text="Describes the surrounding environment's roughness", max_length=3),
        ),
        migrations.AlterField(
            model_name='windloadcalculation',
            name='vb0',
            field=models.FloatField(help_text='The 10-minute mean wind speed at 10 m above ground in open terrain (m/s)', validators=[django.core.validators.MinValueValidator(0, message='Wind velocity cannot be negative'), django.core.validators.MaxValueValidator(100, message='Wind velocity seems unusually high')], verbose_name='Basic Wind Velocity'),
        ),
    ]
